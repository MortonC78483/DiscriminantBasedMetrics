---
title: "group_metrics"
format:
  html:
    theme: default
---
DEPRECATED 

One model approach

```{r}
library(tidyverse)
library(ipumsr)
library(srvyr)
library(tidysynthesis)
library(parsnip)
library("data.table")
library(recipes)
library(devtools)
load_all("../../syntheval")
library(dials)
library(tune)
library(gtools)
library(MASS)
library(caret)
library(gt)
library(ggpubr)
source("../add_pmse_group.R")
source("../permutation_sig.R")
set.seed(78483)
```


Load in data
```{r}
process_data <- function(df){
  df <- as.data.frame(unclass(df),stringsAsFactors=TRUE)
  df$pov <- as.factor(df$pov)
  df$BLACK <- as.factor(df$BLACK)
  order = c("pov", "EMPSTAT", "EDUC", "BLACK", "SEX", "HCOVANY", "VETSTAT", "FTOTINC", "AGE")
  df <- df %>%
    dplyr::select(order)
  df
}
```

```{r}
data_mi <- read_csv("../data/data_mi.csv")
data_mi <- process_data(data_mi)

synth_good <- read_csv("../data/good_synth_pov.csv")
synth_good <- process_data(synth_good)

# synth_fair <- read_csv("../data/synth_pov_75.csv")
# synth_fair <- process_data(synth_fair)
# 
# synth_poor <- read_csv("../data/med_synth_pov.csv")
# synth_poor <- process_data(synth_poor)
# 
# synth_bad <- read_csv("../data/bad_synth_pov.csv")
# synth_bad <- process_data(synth_bad)
# 
# synth_25 <- read_csv("../data/synth_pov_25.csv")
# synth_25 <- process_data(synth_25)

synth_med_pov <- read_csv("../data/med_synth_pov2.csv")
synth_med_pov <- process_data(synth_med_pov)

synth_med_nopov <- read_csv("../data/med_synth_nopov2.csv")
synth_med_nopov <- process_data(synth_med_nopov)


synth_bad_pov <- read_csv("../data/bad_synth_pov2.csv")
synth_bad_pov <- process_data(synth_bad_pov)


synth_bad_nopov <- read_csv("../data/bad_synth_nopov2.csv")
synth_bad_nopov <- process_data(synth_bad_nopov)
```

```{r}
calc_disc <- function(discriminator){
  # Evaluate discriminant-based metrics on the data using tree-based model
  tree_mod <- decision_tree(cost_complexity = tune()) %>%
    set_mode(mode = "classification") %>%
    set_engine(engine = "rpart")
  
  rpart_rec <- recipe(.source_label ~ ., data = discriminator$combined_data)
  
  grid = grid_regular(cost_complexity(), levels= 10)
  
  # set up discriminator
  d <- discriminator %>%
    add_propensities_tuned(
      grid = grid, 
      recipe = rpart_rec,
      spec = tree_mod
    )
  d
}
```

Make discriminators
```{r}
disc_good = discrimination(synth_good, data_mi)
res_good = calc_disc(disc_good)

disc_med_pov = discrimination(synth_med_pov, data_mi)
res_med_pov = calc_disc(disc_med_pov)

disc_med_nopov = discrimination(synth_med_nopov, data_mi)
res_med_nopov = calc_disc(disc_med_nopov)

disc_bad_pov = discrimination(synth_bad_pov, data_mi)
res_bad_pov = calc_disc(disc_bad_pov)

disc_bad_nopov = discrimination(synth_bad_nopov, data_mi)
res_bad_nopov = calc_disc(disc_bad_nopov)
# disc_fair = discrimination(synth_fair, data_mi)
# res_fair = calc_disc(disc_fair)
# 
# disc_poor = discrimination(synth_poor, data_mi)
# res_poor = calc_disc(disc_poor)
# 
# disc_bad = discrimination(synth_bad, data_mi)
# res_bad = calc_disc(disc_bad)
# 
# disc_25 = discrimination(synth_25, data_mi)
# res_25 = calc_disc(disc_25)
```

Run all metrics
```{r}
res_good <- res_good %>%
  add_discriminator_auc(group = c("pov")) %>%
  #add_pmse(group = c("pov")) %>%
  add_specks(group = c("pov"))# %>%
  #add_pmse_ratio(group = c("pov"), times = 25)

res_med_pov <- res_med_pov %>%
  add_discriminator_auc(group = c("pov")) %>%
  #add_pmse(group = c("pov")) %>%
  add_specks(group = c("pov"))

res_med_nopov <- res_med_nopov %>%
  add_discriminator_auc(group = c("pov")) %>%
  #add_pmse(group = c("pov")) %>%
  add_specks(group = c("pov"))

res_bad_pov <- res_bad_pov %>%
  add_discriminator_auc(group = c("pov")) %>%
  #add_pmse(group = c("pov")) %>%
  add_specks(group = c("pov"))

res_bad_nopov <- res_bad_nopov %>%
  add_discriminator_auc(group = c("pov")) %>%
  #add_pmse(group = c("pov")) %>%
  add_specks(group = c("pov"))

# res_fair <- res_fair %>%
#   add_discriminator_auc(group = c("pov")) %>%
#   add_pmse(group = c("pov")) %>%
#   add_specks(group = c("pov")) #%>%
#   #add_pmse_ratio(group = c("pov"), times = 25)
# 
# res_poor <- res_poor %>%
#   add_discriminator_auc(group = c("pov")) %>%
#   add_pmse(group = c("pov")) %>%
#   add_specks(group = c("pov"))# %>%
#   #add_pmse_ratio(group = c("pov"), times = 25)
# #
# res_bad <- res_bad %>%
#   add_discriminator_auc(group = c("pov")) %>%
#   add_pmse(group = c("pov")) %>%
#   add_specks(group = c("pov"))# %>%
#   #add_pmse_ratio(group = c("pov"), times = 25)
# 
# res_25 <- res_25 %>%
#   add_discriminator_auc(group = c("pov")) %>%
#   add_pmse(group = c("pov")) %>%
#   add_specks(group = c("pov"))
```

Plot results
```{r}
good_auc = res_good$discriminator_auc$.estimate[3:4]
med_pov_auc = res_med_pov$discriminator_auc$.estimate[3:4]
med_nopov_auc = res_med_nopov$discriminator_auc$.estimate[3:4]
bad_pov_auc = res_bad_pov$discriminator_auc$.estimate[3:4]
bad_nopov_auc = res_bad_nopov$discriminator_auc$.estimate[3:4]
# fair_auc = res_fair$discriminator_auc$.estimate[3:4]
# poor_auc = res_poor$discriminator_auc$.estimate[3:4]
# bad_auc = res_bad$discriminator_auc$.estimate[3:4]
# auc_25 = res_25$discriminator_auc$.estimate[3:4]

#good_pmse = res_good$pmse$.pmse_ratio[3:4]
#fair_pmse = res_fair$pmse$.pmse_ratio[3:4]
#poor_pmse = res_poor$pmse$.pmse_ratio[3:4]
#bad_pmse = res_bad$pmse$.pmse_ratio[3:4]

good_specks = res_good$specks$.specks[3:4]
med_pov_specks = res_med_pov$specks$.specks[3:4]
med_nopov_specks = res_med_nopov$specks$.specks[3:4]
bad_pov_specks = res_bad_pov$specks$.specks[3:4]
bad_nopov_specks = res_bad_nopov$specks$.specks[3:4]
# fair_specks = res_fair$specks$.specks[3:4]
# poor_specks = res_poor$specks$.specks[3:4]
# bad_specks = res_bad$specks$.specks[3:4]
# specks_25 = res_25$specks$.specks[3:4]

aucs = c(good_auc, med_pov_auc, med_nopov_auc, bad_pov_auc, bad_nopov_auc)
speckss = c(good_specks, med_pov_specks, med_nopov_specks, bad_pov_specks, bad_nopov_specks)
         #poor_auc, auc_25, bad_auc)
#pmses = c(good_pmse, fair_pmse, poor_pmse, bad_pmse)
#speckss = c(good_specks, poor_specks, specks_25, bad_specks)
#synth_type = c("good", "good", "fair", "fair", "poor", "poor", "bad", "bad")
#pov_class = c("nopov", "pov", "nopov", "pov","nopov", "pov", "nopov", "pov")

synth_type = c("good", "good", "med_pov", "med_pov", "med_nopov", "med_nopov", "bad_pov", "bad_pov", "bad_nopov", "bad_nopov")
pov_class = c("nopov", "pov", 
              "nopov", "pov",
              "nopov", "pov", 
              "nopov", "pov", 
              "nopov", "pov")
#synth_type = factor(synth_type, levels = c("bad", "poor", "fair", "good"))
synth_type = factor(synth_type, levels = c("bad_nopov", "med_nopov", "good", "med_pov", "bad_pov"))
plot <- data.frame(auc = aucs, 
                   #pmse = pmses, 
                   specks = speckss, synth_type = synth_type, pov_class = pov_class)

ggplot(plot, aes(x = synth_type, group = pov_class, y = auc, color = pov_class))+
  geom_point()+
  ylab("AUC")+
  xlab("Synthesis Type")+
  theme_classic()

# ggplot(plot, aes(x = synth_type, group = pov_class, y = log(pmse), color = pov_class))+
#   geom_point()+
#   ylab("log(pMSE ratio)")+
#   xlab("Synthesis Type")+
#   theme_classic()

ggplot(plot, aes(x = synth_type, group = pov_class, y = specks, color = pov_class))+
  geom_point()+
  ylab("SPECKS")+
  xlab("Synthesis Type")+
  theme_classic()
```


Going to try two-model approach now instead to see if that improves things
```{r}
fit_two_model <- function(synth, conf, calc_disc, synth_type){
  # pov disc
  synth_pov = synth[synth$pov == 1,]
  conf_pov = conf[conf$pov == 1,]
  disc = discrimination(synth_pov, conf_pov)
  res = calc_disc(disc)
  
  res <- res %>%
    add_discriminator_auc() %>%
    add_specks()
  
  auc_pov = res$discriminator_auc$.estimate[2]
  specks_pov = res$specks$.specks[2]
  
  # no pov disc
  synth_nopov = synth[synth$pov == 0,]
  conf_nopov = conf[conf$pov == 0,]
  disc = discrimination(synth_nopov, conf_nopov)
  res = calc_disc(disc)
  
  res <- res %>%
    add_discriminator_auc() %>%
    add_specks()
  
  auc_nopov = res$discriminator_auc$.estimate[2]
  specks_nopov = res$specks$.specks[2]
  
  return(data.frame(aucs = c(auc_pov, auc_nopov), 
             speckss = c(specks_pov, specks_nopov), 
             synth_type = rep(synth_type, 2),
             pov_class = c("pov", "nopov")))
  
}
```


```{r}
plot(synth_bad_nopov$FTOTINC, synth_bad_nopov$EDUC, col = synth_bad_nopov$pov)
plot(synth_bad_pov$FTOTINC, synth_bad_pov$EDUC, col = synth_bad_nopov$pov)
df_bad_pov = fit_two_model(synth_bad_pov, data_mi, calc_disc, "bad_pov")
df_bad_nopov = fit_two_model(synth_bad_nopov, data_mi, calc_disc, "bad_nopov")
```



